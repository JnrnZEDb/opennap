dnl $Id$
AC_INIT(opennap.h)
AM_INIT_AUTOMAKE(opennap,0.24)
AM_MAINTAINER_MODE
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_MSG_CHECKING(for socklen_t)
AC_EGREP_HEADER(socklen_t, /usr/include/sys/socket.h,
	[AC_MSG_RESULT(yes)
	AC_DEFINE(HAVE_SOCKLEN_T)],
	[AC_MSG_RESULT(no)])
AC_C_BIGENDIAN
AC_CHECK_SIZEOF(long)

dnl give the option to disable the use of /dev/random even if it exists
ac_cv_check_random=yes
AC_ARG_ENABLE(random, [  --disable-random	Do not use /dev/random ],
	[if test $enableval = 'no'; then
		ac_cv_check_random=no

	fi])
if test $ac_cv_check_random = 'yes'; then
AC_CHECK_FILE(/dev/random, [AC_DEFINE(HAVE_DEV_RANDOM)])
fi

AC_CHECK_LIB(z, compress2)
AC_CHECK_LIB(xnet,gethostbyname)
AC_CHECK_LIB(nsl,socket)
dnl AC_CHECK_FUNCS(poll)

ac_cv_warnings=yes
AC_ARG_ENABLE(warnings, [  --disable-warnings	Turn of GCC compiler warnings ],
	[ac_cv_warnings=$enableval])
if test $ac_cv_warnings != "no"; then
	CFLAGS="-W -Wall -Wmissing-prototypes -pedantic $CFLAGS"
fi
ac_cv_debug=yes
AC_ARG_ENABLE(debug, [  --disable-debug	Turn off memory debugging code],
	[ac_cv_debug=$enableval])
if test $ac_cv_debug = yes; then
	CFLAGS="-DDEBUG=1 $CFLAGS"
fi
AC_ARG_WITH(fd-setsize,
[  --with-fd-setsize=N	Set max connections with select() to N],
[AC_DEFINE(FD_SETSIZE,$withval)])
AC_OUTPUT(Makefile)
