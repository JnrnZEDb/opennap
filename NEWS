[opennap 0.35]

added `max_clones' configuration variable to control how many clients may
log into the server from the same ip address.

[opennap 0.34]

added channel mode command (/msg chanserv mode <channel> [mode]) where
mode is one or more of
	+MODERATED	only mods, ops and voiced users can talk
	+INVITE		non-ops/mods must be invited to /join
	+TOPIC		any user in the channel can change the topic
	+PRIVATE	channel does not show up in channel list

added channel voice command: /msg chanserv voice <channel> [user [user ...]]
allows a user to talk in a moderated channel

added channel muzzle command: /msg chanserv muzzle <channel> <user> ["reason"]
muzzles a user in the specified channel only

added channel invite command: /msg chanserv invite <channel> <user>
to allow a user to join a +invite channel

added channel wallop command: /msg chanserv wallop <channel> <text>
to send a message to all ops/mods+ in the specified channel

notifications about changes in channels are now only sent to the ops/mods+ in
that channel rather than to all mods+

removed +TOPIC and +CHANNEL user modes

max nickname length set to 19 to avoid a bug in the windows napster client

[opennap 0.32]

fixes bug in channel_op() which allowed any user to gain channel operator
status on any channel

[opennap 0.31]

added new flags 'z' and 'c' to global user list to display all muzzled and
cloaked users, respetively.

the server config command will now dump all variables if none is specified

added the number of registered user to the stats dump

motd is now stored in memory upon startup to avoid reading it from disk
every time a login occurs

default nick expire is now 31 days

added timestamps for channel settins so that when servers link it is
unambiguous what it should be set to if there are differences.

bans file is now dumped periodically to save state

added ghost feature where the server will automatically kill a previous
login if the second login comes from the same ip for the same nickname.

reduced memory usage for bitrate/samplerate to 1 byte per file by using an
index of allowed values in the MPEG-3 standard.

[opennap 0.30]

added new config var max_topic to limit the max length of a channel topic

added new config var max_reason to limit the max length of a
kick/kill/muzzle reason

added new config var max_hotlist to limit the max number of users allowed on
a user's hotlist

added new config var max_ignore to limit the max number of users allowed on
a user's ignore list

added new config var max_client_string to limit the max length of the client
version string

[opennap 0.29]

fixes buffer overflow in server output to clients

[opennap 0.28]

zlib is now required to compile opennap.  previous versions will not
link with 0.28 at compression_level 0 because of this change.

added channel operator support.  channel operators have the ability to issue
admin commands relating to a specific channel (kick, ban, topic, etc).
channel operators can be bootstrapped in the `channels' file--simply list
the nicknames separated by a space after the topic.

added `ChanServ' virtual user to allow channel operators to access admin
commands if they are not implemented in the client they are using.
(/msg chanserv help)

added help to OperServ (/msg operserv help)

the channels file is now rewritten in a similar fashion to the users file to
store the current state of the settings (including channel ops)

opennap will now always return the string 000000000000000000000000000000
for the hash value when RESUME is disabled.  opennap conserves memory by not
storing the real value in this case.

[opennap 0.27]

changed `server_port' variable to `server_ports'.  it can now take a space
separated list of ports for the server to listen on for incoming
connections.

added global user list command (831).  the arguments to the command are
	[server [flags]]
where `server' is the particular server to search (can be `*' for all) and
`flags' is one of `l', `e', `a', `m' (leech, elite, admin, mod,
respectively).

Server linking now works correctly under Win32 platforms.

Added logchk and napchk BASH utility scripts from WoLF

Added -b command line argument to run OpenNap in the background on Unix
platforms.

OpenNap will now write its process id in the `pid' file in the OpenNap
configuration directory.

Server support for resume is now disabled by default (can be renabled with
configure --enable-resume)

The character `$' is no longer allowed in nicknames since many clients use
this to denote a variable.

[opennap 0.26]

added `lock_memory' boolean configuration option to prevent the process from
being swapped when enabled

added `registered_only' boolean configuration variable to only allow
registered users to log in

added `auto_register' boolean configuration option to force user account
registration upon login

added support for the new file sharing commands in Napster 2.0 Beta 6

the `servers' file format was changed to add an extra field for a local
password to use instead of `server_password' to enable different password
pairs to be used for each server link

added support for server-side ignore commands in Napster 2.0 beta 6

added support for cloaking by privileged users

muzzle state is now stored in the user db and restored when the user logs in
the next time

added support for server ping client command in Napster 2.0 beta 6

added support for channel ban client commands in Napster 2.0 beta 6

added support for creating `rollover' channels when predefined channels
reach their limit on the number of users

[opennap 0.25]

added a new configuration variable `config_dir' which controls the location
where opennap looks for its config files (users, servers, bans, motd,
channels), and removed the file-specific configuration variables:
user_db_path, server_db_path and motd_path.

added persistent channel configuration file: channels.  This file allows
creation of channels which always exist even if no users are in them, along
with the default level and limit.  See sample.channels for an example.

added the OperServ `usermode' command to allow privileged users (Moderator
or higher) to selectively turn off server notifications about things such as
kills, muzzles and bans.  See the README file for details.

[opennap 0.24]

md5 passwords are now used to store user passwords on disk.  A new utility
called 'mkpass' is now used to generate a md5 password from plaintext
password when first setting up the server.  See the README file for details.

Added support for the clear channel (820) user command which will remove all
users of a lesser user level than the usr who issued the command.

When compiled with debugging support, sending SIGUSR1 to the opennap process
will cause it to dump the table of allocated memory.

Added virtual user "OperServ" which accepts commands via /msg.  This is
intended to provide support for clients which have no built in support for
the opennap extensions.  See the README file for a complete list of accepted
commands.

Added channel limit command (826) to specify the maximum number of users
allowed in a channel.

Added new channel list command (827/828) which shows additional information
about the channels such as the mimium level required for entry, and the
channel limit.

Added the nuke command to remove a registered user from the database.

The stats and links commands are now accessible to unprivileged users.

Bans are now saved and reloaded (default: /usr/local/share/opennap/bans)
on startup.

[opennap 0.23]

Server was fixed to compile without zlib for use as a standalone server.
This makes it much easier to compile under Win32 platforms.

Server now crops public and emote messages longer than 128 to prevent
exploitation of the DoS attack against the Windows Napster client.

opennap should now consume considerably less CPU time.  It now attempts to
accept() as many incoming connections as possible per iteration of the main
event loop.

The user database is now read into memory for fast lookup.  It is dumped to
disk every `user_db_interval' seconds (default: 1800)

opennap are now aware of all servers in the cluster that are linked.  The
`server links' command was modified to present this information.

Added new administrative commands for registering a nick and changing a user's
reported line speed.

opennap now prints bandwidth usage stats as part of its logging messages.

[opennap 0.22]

MySQL is no longer used in opennap.  The users and servers databaseses are
now handled as a flat text files.  The location of these files is controlled
by the new configuration variables `user_db_path' and `server_db_path'.  See
the README file for more details.

OS/2 port by Brian Smith <dbsoft@technologist.com>.

Solaris port by jones@users.sourceforge.net.

[opennap 0.20]

opennap will now listen on port 8889 in addition to the client connection
port.  When a connection is made to port 8889 it will display some
information about the status of the server, similar the the stats command
in the napster protocol.  This is intended to be usesful for clients to
query various servers to see their stats without having to log into each
one.

added max_nick_length configuration variable which controls the maximum
length a nickname is allowed to be (default: 32).  It can be set to 0
to indicate no maximum.  The protocol itself doesn't care how long nicks
are, but this puts a cap for readability in clients.

added --with-fd-setsize configure option to allow select() based systems
with a small default value (such as 256 under BSDI) to compile with a higher
maximum for more connections.

added new configuration variable connection_hard_limit to specify the
maximum number of connections that the process will ever be able to support
(default: 1024).  Note that this is different from the max_connections
variable which controls how many connections are allowed at the given
moment.  The reason for this variable is that on some systems you are
not allowed to increase the hard limit of file descriptors for a process
unless you have root privileges.  If run as root, opennap consults
connection_hard_limit to set the hard limit before dropping root privileges.

as described above, opennap can now be run as root when more file
descriptors per process than default is required.  new variables `uid' and
`gid' were added to specify the user and group to run as after changing
the resouce limits.  By default, opennap will attempt to find the uid/gid
for `nobody/nobody' and run as such.

opennap has been ported to Windows 2000 thanks to Damian Hodgkiss.

MySQL is no longer used to store the file database.  A custom memory based
solution was used in order to speed up the searches.  This requires more
memory, but the load is very low when searching.
