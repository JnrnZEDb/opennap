opennap - the open source napster server
========================================
Last updated January 20, 2000

* For a description of the napster protocol, please see the file 'napster.txt'
  included with this distribution.

* INSTALLATION

  1.  build and install mysqld plus the client libraries (libmysqlclient.a)
  2.  build and install opennap
  3.  create a user and database for opennap to use

	# mysql -u root -p < create_db.sql
	Enter password:

  4.  change the default password for the mp3 user

  	mysqladmin -u mp3 -p password 'newpass'

  5.  create at least one administrator nick to use on the server

	# mysql -u mp3 -p
        Enter password:

	mysql> use mp3;
	mysql> insert into accounts ('nick','pass','admin');
	mysql> quit;

      where 'nick' is the nick you want to use, 'pass' is the password for
      the nick.

  6.  edit the opennap config file and change at least the `db_pass' line to
      correspond to the password you selected above in step #4.  By default,
      the config file is located in /usr/local/share/opennap/config.

* Database descriptions

	The following tables are stored in the "mp3" database.

	* Local accounts table

		CREATE TABLE accounts (nick VARCHAR(32), password VARCHAR(32),
			level VARCHAR(9));

		This table is for local servers to set the default level
		for their administrators and moderators.  User accounts
		are not kept here.

	* Server table

		CREATE TABLE servers (name VARCHAR(32), password VARCHAR(32));

		This table keeps the passwords for its peer servers.  When
		a server requests linking, we look in this table for the
		password to expect.  In addition, the dns lookup for
		'name' MUST match the ip address for the connection to
		prevent others from using a sniffed password.

	* Library table

		CREATE TABLE library (owner VARCHAR(9), filename VARCHAR(255),
			size INT UNSIGNED, md5 CHAR(48), bitrate INT UNSIGNED,
			freq INT UNSIGNED, duration INT UNSIGNED,
			linespeed INT UNSIGNED);

		'owner' is the nick contributing the file
		'filename' is the name of the contributed file
		'md5' is the md5 checksum of the file
		'size' is the file size in bytes
		'bitrate' is the mp3 bit rate in kbps
		'freq' is the sampling frequence of the file in hz
		'duration' is the play time of the mp3 in seconds
		'linespeed' is the contributor's link type

* Server to Server messages

There are many cases where client commands need to be passed to peer servers
in order to maintain database consistency across all servers.  However, most
of the commands that the clients use don't specify the user who performed
the action.  This implementation borrows from the IRC protcol and prefixes
client commands with
	:user
to indicate to peer servers which user issued the command.  Commands which
already specify the user name, such as the login request (2), are not
prefixed.  Each request handler should have a comment at the beginning
specifying what input it expects.

* Non-standard messages

The following messages are not present in the official napster servers, but
are implemented as additional functionality in the opennap server.

10000	client quit

	<nick>

	the message is sent to peer servers when a client connection has
	closed

10010	server login

	<server-name> <nonce>

	<server-name>	the dns name of the server wishing to connect
	<nonce>		a random string to use for authentication

	this message is sent when a connection wishes to identify itself as
	a peer server.  when a server receives this message, it will send its
	own login command to the peer to initial mutual authentication

10011	server login ack

	<hash-response>

	to authenticate itself, the server will hash the value
		<peer-nonce><nonce><server-pass>
	using the MD5 algorithm.  this allows the servers to mutually
	authenticate without the plaintext passwords traversing the network


10012	client request to connect to server

	<server-name> <port>

	client is requesting that local server establish a connection with
	the server running at <server-name>:<port>

10013	user ip

	<user> <ip>

	this message is used for a server to pass the ip address of a
	locally connected client to its peer servers, since that information
	is not available in the login message.  <ip> is an unsigned long
	integer specifying the ip address for <user>

* References

RFC1459, the IRC protocol was helpful in implementing many features.

http://www.onelist.com/community/napdev/ is a useful community (mailing list)
for discussion of the napster protocol.
